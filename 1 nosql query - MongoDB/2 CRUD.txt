database - table		- row
database - collection 	- document

show dbs
db
use Grocery_Store		// create database



create			// create collection
-------------------
db.products.insertOne({_id: 1, name: 'Pen', price: 5})
db.products.insertMany([{_id: 1, name: 'Pen', price: 5}, {_id: 2, name: 'Paper', price: 20}])


object for Page
{
	name: 'Class10'
	students: [
		{
			studentName: 'Kulsoom',
			subjects: [
				{
					subjectName: 'English',
					marks: 90
				},
				{
					subjectName: 'Maths',
					marks: 100
				}
			]
		},
		{
			studentName: 'Fatema',
			subjects: [
				{
					subjectName: 'English',
					marks: 70
				},
				{
					subjectName: 'Maths',
					marks: 80
				}
			]
		}
	]
}



[
  {
    _id: 1,
    title: 'The Color of Magic',
    author: 'Terry Pratchett',
    pages: 323,
    rating: 7,
    genres: [ 'fantasy', 'magic' ]
  },
  {
    _id: 2,
    title: 'The Color of Flower',
    author: 'Terry Pratchett',
    pages: 433,
    rating: 7,
    genres: [ 'romance', 'witchcraft' ]
  },
  {
    _id: 3,
    title: 'The Play of Kasim',
    author: 'Malika Aakdha',
    pages: 233,
    rating: 9,
    genres: [ 'fantasy' ],
    reviews: [
      { name: 'Komolata', body: 'Nice to read' },
      { name: 'Arunita', body: 'Superb!' }
    ]
  },
  {
    _id: 4,
    title: 'The Color of Magic',
    author: 'Terry Pratchett',
    pages: 455,
    rating: 10,
    genres: [ 'fantasy', 'sci-fi', 'magic' ]
  },
  {
    _id: 5,
    title: 'The Color of Flower',
    author: 'Terry Pratchett',
    pages: 466,
    rating: 9,
    genres: ['witchcraft' ]
  },
  {
    _id: 6,
    title: 'The Play of Kasim',
    author: 'Malika Aakdha',
    pages: 234,
    rating: 10,
    genres: [ 'fantasy', 'sci-fi'],
    reviews: [
      { name: 'Komolata', body: 'Nice to read' },
      { name: 'Arunita', body: 'Superb!' }
    ]
  },
	{
    _id: 7,
    title: 'The Color of Flower',
    author: 'Terry Pratchett',
    pages: 596,
    rating: 6,
    genres: ['romance' ]
  }
]



json format
----------------------
	{
    "_id": 7,
    "title": "The Color of Flower",
    "author": "Terry Pratchett",
    "pages": 596,
    "rating": 6,
    "genres": ["romance"]
  }









read
-------------------
db.products.find()

let find1 = await Page.findOne(
  {'data._id': '6412b33eec028cfd488495fc'},
  {data: 1, _id: 0}
)






update
-------------
db.products.update({_id: 1}, {$set: {stock: 20}})
db.products.updateOne({_id: 1}, {$set: {stock: 20}})
db.products.updateMany({_id: 1},{$set: {stock: 28, demand: 'good'}})

//delete a column of the row
db.products.update({_id: 1}, {$unset: {demand:'good'}})

db.books.update({_id: 6}, {$inc: {pages: 2}})


await Page.updateOne(
  {name: 'Zainab'},
  {$pull: {data: {_id: '6412bf6cfff27e142b429b39'}}}
)

db.books.update({_id: 6}, {$pull: {genres: 'sci-fi'}})
db.books.update({_id: 6}, {$push: {genres: 'sci-fi'}})		// push a single element
db.books.update({_id: 6}, {$push: {genres: {$each: ['romantic', 'horror']}}})    // push an array of elements


db.books.update(
  {_id: 6},
  {$push: {$[var1].reviews: {}}})

db.classes.updateOne(
  {class: '10 B'}, 
  {pull: {'students.$[var1].subjects': {subjectName: 'Maths'}}},
  {arrayFilters: [{'var1.studentName': 'Zainab'}]}
)




await Page.updateOne(
  {name: 'Zainab'}, 
  {$push: {data: {name: 'Hello, how are you?'}}}
)

await Page.updateOne(
  {name: 'Zainab'},
  {$pull: {data: {_id: '6412bf6cfff27e142b429b39'}}}
)

await Page.updateOne(
  {name: 'Zainab'},
  {$pull: {data: {name: 'She recites Quran beautifully', _id: '64149675734c0d9715712b1b'}}}
)





Article.updateOne(
  {title: 'title2'},
  {$set: {body: {title1: 'title2 bb', content1: 'content2 bb'}}}
)
Article.updateOne(
  {title: 'title2'},
  {$push: {body: {title1: 'title4 dd', content1: 'content4 dd'}}}
)
Article.updateOne(
  {title: 'title2'},
  {$pull: {body: {title1: 'title4 dd'}}}
)





db.products.update({_id: 1}, {$unset: {demand:'good'}})


db.products.update(
  {_id: 1}, 
  {$set: {reviews: 
	[
	  {
		authorName: 'Sara', 
		rating: 5, 
		review: 'Nice pen, very smooth'
	  }, 
	  {
		authorName: 'Karim', 
		rating: 4, 
		review: 'Good pen, easy to use'
	  }
	]
  }}
)






delete
-------------
// delete full row | document
db.products.deleteOne({name: 'pencil'})
db.products.deleteMany({price: {$in: [30, 300]}})
db.articles.deleteMany({title: {$in: ["title1", "title2", "title3", "title4"]}})


use mydb
db.dropDatabase()					// drop database
db.books.drop()						// drop collection

// delete a column of the row
db.products.update({_id: 1}, {$unset: {demand:'good'}})




